@startuml
class BotHandler {

s : BotService
AddBot(c: echo.Context) : error
}
class validate.AddBotRequest {

BotConfig : states.BotStates
Token : string
}
class states.BotStates
class algorithm {

CheckAlgorithm(botStates: states.BotStates) : error
}
class BotService {

AddBot(botConfig: states.BotStates, token: string) : error
}
BotHandler -> validate.AddBotRequest
validate.AddBotRequest -> states.BotStates
validate.AddBotRequest -> algorithm
BotHandler -> BotService
class BotHandler {
    - s : service
    + AddBot(c: Context): error
}

interface service {
    + AddBot(conf: BotStates, token: string): error
    + DeleteBot(id: string): error
    + GetAllBots(): ([]Bot, error)
    + UpdateBotConfig(conf: BotStates, id: string): error
}

class botService.Service {
    + AddBot(conf: BotStates, token: string): error
    + DeleteBot(id: string): error
    + GetAllBots(): ([]Bot, error)
    + UpdateBotConfig(conf: BotStates, id: string): error
}

class BotStates
class Bot

BotHandler -> service
service <|.. botService.Service
service --> BotStates
botService.Service --> Bot

@enduml